#!/usr/bin/env python3
import sys
from os import path

COPYRIGHT = """
GUISCRCPY by srevinsaju
Get it on : https://github.com/srevinsaju/guiscrcpy
Licensed under GNU Public License

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.
"""

RAW_VERSION = "4.0"

DESKTOP_FILE = """[Desktop Entry]
Version={v}
Name=guiscrcpy
GenericName=guiscrcpy
Comment=Open Source Android Screen Mirroring System
Exec=guiscrcpy
Icon={icon_path}
Type=Application
Categories=Utility;Development;
StartupWMClass=UGENE
"""


EXTRAS_REQUIRE = {"pyqt5": "PyQt5", "pyside2": "PySide2"}


def gen_version():
    """
    Generates a version from the available git repositories
    If git repository is not valid, fallback to __version__
    :return:
    """
    import git

    repo = git.Repo(search_parent_directories=True)
    ver = repo.git.describe("--tags")
    raw_version = ver.split("-")
    if "release" in sys.argv:
        print("Checking out guiscrcpy to release")
        if "releaser" in sys.argv[0] and len(sys.argv) >= 3:
            pass
        elif "releaser" in sys.argv[1] and len(sys.argv) >= 4:
            pass
        else:
            raise Exception("Invalid data provided.")
        print("Releasing", sys.argv[-1])
        return str(sys.argv[-1])
    else:
        if len(raw_version) == 1:
            # Stable Release
            git_version = "{}".format(raw_version[0])
        elif len(raw_version) == 2:
            # Release Candidate
            git_version = "{major}.post{minor}".format(major=raw_version[0],
                                                       minor=raw_version[1])
        else:
            # Revision Dev
            git_version = "{major}.post{minor}.dev".format(
                major=raw_version[0], minor=raw_version[1])
    return git_version


try:
    v = gen_version()
except Exception as e:
    print("WARNING: {}".format(e))
    v = f"{RAW_VERSION}.x.src.dev"

# Attach requirements

VERSION_FILE = '''#!/usr/bin/env python3
"""
{COPYRIGHT}
"""

VERSION = "{version}"
'''


with open("guiscrcpy/version.py", "w") as w:
    w.write(VERSION_FILE.format(
        COPYRIGHT=COPYRIGHT,
        version=v,
    ))

with open("guiscrcpy.desktop", "w") as w:
    w.write(DESKTOP_FILE.format(v=v, icon_path="guiscrcpy"))

with open("snap/gui/guiscrcpy.desktop", "w") as w:
    w.write(
        DESKTOP_FILE.format(v=v, icon_path="${SNAP}/meta/gui/guiscrcpy.png"))

with open("snap/local/snapcraft.yaml", "r") as r:
    SNAPCRAFT_FILE = r.read()

with open("snap/snapcraft.yaml", "w") as w:
    w.write("name: guiscrcpy\n")
    w.write("version: {}\n".format(v))
    w.write(SNAPCRAFT_FILE)

print("Setup filename generated.")
print("GUISCRCPY >> VERSION : {}".format(v))

# Issue #82, #80
# https://stackoverflow.com/questions/25284879/ \
# install-desktop-file-with-setup-py/44462146#44462146
